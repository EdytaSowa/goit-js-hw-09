{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,UACnCC,EAAYF,SAASC,cAAc,uBACnCE,EAAWH,SAASC,cAAc,sBAClCG,EAAaJ,SAASC,cAAc,wBAIpCI,EAAgB,SAACC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAKPR,EAAUe,iBAAiB,SAAS,SAAAC,GAClCA,EAAMC,iBAQN,IANA,IAAMC,EAAaC,OAAOhB,EAAUiB,OAE9BC,EAAYF,OAAOf,EAASgB,OAE5BE,EAASH,OAAOd,EAAWe,OAExBG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAGhCjB,EAAciB,EAFIL,EAAaG,GAAaE,EAAI,IAG7CC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,O,IAIjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createBtn = document.querySelector('button');\nconst userDelay = document.querySelector('input[name=\"delay\"]');\nconst userStep = document.querySelector('input[name=\"step\"]');\nconst userAmount = document.querySelector('input[name=\"amount\"]');\n\n\n\nconst createPromise = (position, delay) => {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n};\n\ncreateBtn.addEventListener('click', event => {\n  event.preventDefault();\n\n  const firstDelay = Number(userDelay.value);\n\n  const delayStep = Number(userStep.value);\n\n  const amount = Number(userAmount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const totalTime = firstDelay + delayStep * (i - 1);\n\n    createPromise(i, totalTime)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n  }\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createBtn","document","querySelector","$ce04d3a99e08e73b$var$userDelay","$ce04d3a99e08e73b$var$userStep","$ce04d3a99e08e73b$var$userAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","firstDelay","Number","value","delayStep","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2dc99bdf.js.map"}